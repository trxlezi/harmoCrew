{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aluno\\\\harmoCrew\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\"));\n  const [isLoading, setIsLoading] = useState(true);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem(\"token\");\n  }, []);\n  useEffect(() => {\n    const validateToken = async () => {\n      if (!token) {\n        setUser(null);\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const res = await fetch(\"http://localhost:5000/profile\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error(\"Token inv치lido\");\n        const data = await res.json();\n        setUser(data.user);\n      } catch (err) {\n        console.log(\"Token inv치lido ou expirado, fazendo logout\");\n        logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    validateToken();\n  }, [token, logout]);\n  const login = (token, userData) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"7v6Y3xZ4d9/dDetMOUQHOIJ004Q=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","isLoading","setIsLoading","logout","removeItem","validateToken","res","fetch","headers","Authorization","ok","Error","data","json","err","console","log","login","userData","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aluno/harmoCrew/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\"));\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"token\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const validateToken = async () => {\r\n      if (!token) {\r\n        setUser(null);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/profile\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!res.ok) throw new Error(\"Token inv치lido\");\r\n\r\n        const data = await res.json();\r\n        setUser(data.user);\r\n      } catch (err) {\r\n        console.log(\"Token inv치lido ou expirado, fazendo logout\");\r\n        logout();\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    validateToken();\r\n  }, [token, logout]);\r\n\r\n  const login = (token, userData) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    setUser(userData);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout, isLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,WAAW,QACN,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEf,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,MAAMgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMoB,MAAM,GAAGjB,WAAW,CAAC,MAAM;IAC/BY,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACd,MAAMqB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI,CAACR,KAAK,EAAE;QACVD,OAAO,CAAC,IAAI,CAAC;QACbM,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;MAEA,IAAI;QACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UACvDC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUZ,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAI,CAACS,GAAG,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QAE9C,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;QAC7BjB,OAAO,CAACgB,IAAI,CAACjB,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QACzDb,MAAM,CAAC,CAAC;MACV,CAAC,SAAS;QACRD,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACR,KAAK,EAAEM,MAAM,CAAC,CAAC;EAEnB,MAAMc,KAAK,GAAGA,CAACpB,KAAK,EAAEqB,QAAQ,KAAK;IACjCpB,QAAQ,CAACD,KAAK,CAAC;IACfE,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAEtB,KAAK,CAAC;IACpCD,OAAO,CAACsB,QAAQ,CAAC;EACnB,CAAC;EAED,oBACE9B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEE,KAAK;MAAEoB,KAAK;MAAEd,MAAM;MAAEF;IAAU,CAAE;IAAAR,QAAA,EACpEA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC/B,GAAA,CApDeF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}